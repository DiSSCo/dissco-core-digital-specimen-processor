/*
 * This file is generated by jOOQ.
 */
package eu.dissco.core.digitalspecimenprocessor.database.jooq.tables.records;


import eu.dissco.core.digitalspecimenprocessor.database.jooq.enums.TranslatorType;
import eu.dissco.core.digitalspecimenprocessor.database.jooq.tables.SourceSystem;
import java.time.Instant;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SourceSystemRecord extends UpdatableRecordImpl<SourceSystemRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.source_system.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.source_system.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.source_system.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.source_system.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.source_system.endpoint</code>.
     */
    public void setEndpoint(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.source_system.endpoint</code>.
     */
    public String getEndpoint() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.source_system.description</code>.
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.source_system.description</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.source_system.created</code>.
     */
    public void setCreated(Instant value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.source_system.created</code>.
     */
    public Instant getCreated() {
        return (Instant) get(4);
    }

    /**
     * Setter for <code>public.source_system.deleted</code>.
     */
    public void setDeleted(Instant value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.source_system.deleted</code>.
     */
    public Instant getDeleted() {
        return (Instant) get(5);
    }

    /**
     * Setter for <code>public.source_system.mapping_id</code>.
     */
    public void setMappingId(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.source_system.mapping_id</code>.
     */
    public String getMappingId() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.source_system.version</code>.
     */
    public void setVersion(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.source_system.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>public.source_system.creator</code>.
     */
    public void setCreator(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.source_system.creator</code>.
     */
    public String getCreator() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.source_system.translator_type</code>.
     */
    public void setTranslatorType(TranslatorType value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.source_system.translator_type</code>.
     */
    public TranslatorType getTranslatorType() {
        return (TranslatorType) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SourceSystemRecord
     */
    public SourceSystemRecord() {
        super(SourceSystem.SOURCE_SYSTEM);
    }

    /**
     * Create a detached, initialised SourceSystemRecord
     */
    public SourceSystemRecord(String id, String name, String endpoint, String description, Instant created, Instant deleted, String mappingId, Integer version, String creator, TranslatorType translatorType) {
        super(SourceSystem.SOURCE_SYSTEM);

        setId(id);
        setName(name);
        setEndpoint(endpoint);
        setDescription(description);
        setCreated(created);
        setDeleted(deleted);
        setMappingId(mappingId);
        setVersion(version);
        setCreator(creator);
        setTranslatorType(translatorType);
        resetChangedOnNotNull();
    }
}
